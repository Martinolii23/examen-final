#include <stdio.h>
#include <stdlib.h>
#include <time.h>


void imprimirArreglo(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}


void insertionSort(int arr[], int n) {
    int i, key, j;
    for (i = 1; i < n; i++) {
        key = arr[i];
        j = i - 1;

        while (j >= 0 && arr[j] > key) {
            arr[j + 1] = arr[j];
            j = j - 1;
        }
        arr[j + 1] = key;
    }
}


void swap(int* a, int* b) {
    int t = *a;
    *a = *b;
    *b = t;
}

int partition(int arr[], int low, int high) {
    int pivot = arr[high];
    int i = (low - 1);

    for (int j = low; j <= high - 1; j++) {
        if (arr[j] < pivot) {
            i++;
            swap(&arr[i], &arr[j]);
        }
    }
    swap(&arr[i + 1], &arr[high]);
    return (i + 1);
}

void quickSort(int arr[], int low, int high) {
    if (low < high) {
        int pi = partition(arr, low, high);

        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}


void bubbleSort(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                swap(&arr[j], &arr[j + 1]);
            }
        }
    }
}

int main() {
	printf("sea paciente aveces tarda un poquito :)\n\n");
    const int size = 10000;
    int arreglo[size];

    srand(time(NULL));

    
    for (int i = 0; i < size; i++) {
        arreglo[i] = rand() % 10000; 
    }

    
    const int numEjecuciones = 100;
    clock_t inicio, fin;
    double tiempoTotal;

    
    tiempoTotal = 0;
    for (int i = 0; i < numEjecuciones; i++) {
        int copia[size];
        for (int j = 0; j < size; j++) {
            copia[j] = arreglo[j];
        }

        inicio = clock();
        insertionSort(copia, size);
        fin = clock();

        tiempoTotal += ((double)(fin - inicio) / CLOCKS_PER_SEC) * 1000;
    }

    printf("Insertion Sort:\n");
    printf("Tiempo promedio: %.5f ms\n", tiempoTotal / numEjecuciones);

   
    tiempoTotal = 0;
    for (int i = 0; i < numEjecuciones; i++) {
        int copia[size];
        for (int j = 0; j < size; j++) {
            copia[j] = arreglo[j];
        }

        inicio = clock();
        quickSort(copia, 0, size - 1);
        fin = clock();

        tiempoTotal += ((double)(fin - inicio) / CLOCKS_PER_SEC) * 1000;
    }
    printf("\nQuick Sort:\n");
    printf("Tiempo promedio: %.5f ms\n", tiempoTotal / numEjecuciones);

    
    tiempoTotal = 0;
    for (int i = 0; i < numEjecuciones; i++) {
        int copia[size];
        for (int j = 0; j < size; j++) {
            copia[j] = arreglo[j];
        }

        inicio = clock();
        bubbleSort(copia, size);
        fin = clock();

        tiempoTotal += ((double)(fin - inicio) / CLOCKS_PER_SEC) * 1000;
    }
    printf("\nBubble Sort:\n");
    printf("Tiempo promedio: %.5f ms\n", tiempoTotal / numEjecuciones);

    return 0;
}
